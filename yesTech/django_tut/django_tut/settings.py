"""
Django settings for django_tut project.
Generated by 'django-admin startproject' using Django 5.2.5.
Docs: https://docs.djangoproject.com/en/5.2/
Each setting below has a short beginner note.
"""

from pathlib import Path  # Modern path operations

# Base project directory (root folder of your project)
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: Keep secret in env vars for real projects; never commit real keys
SECRET_KEY = 'django-insecure-lts$&slbn3l29gk+7hgtktauch4yo%$xg@fgt8ki0b!%66k4ot'

# Debug mode shows detailed errors; set to False in production
DEBUG = True

# Domains/IPs allowed to serve this site; add your domain in production
ALLOWED_HOSTS = []

# Apps enabled for this project (Django built-ins + your custom apps)
INSTALLED_APPS = [
    'django.contrib.admin',          # Admin site
    'django.contrib.auth',           # Auth system
    'django.contrib.contenttypes',   # Content type framework
    'django.contrib.sessions',       # Session support
    'django.contrib.messages',       # Messaging framework
    'django.contrib.staticfiles',    # Static files handling
    'home',                          # Your app
]

# Request/response processing hooks
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',            # Security improvements
    'django.contrib.sessions.middleware.SessionMiddleware',     # Session management
    'django.middleware.common.CommonMiddleware',                # Common utilities
    'django.middleware.csrf.CsrfViewMiddleware',                # CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # User auth
    'django.contrib.messages.middleware.MessageMiddleware',     # One-time messages
    'django.middleware.clickjacking.XFrameOptionsMiddleware',   # Prevent clickjacking
]

# Root URL config module
ROOT_URLCONF = 'django_tut.urls'

# Template (HTML rendering) configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Template engine
        'DIRS': ['templates'],        # Extra template folders
        'APP_DIRS': True,             # Auto-load templates/ in apps
        'OPTIONS': {
            'context_processors': [   # Inject common data into templates
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI entry point for deployment (Gunicorn, etc.)
WSGI_APPLICATION = 'django_tut.wsgi.application'

# Database configuration (SQLite for development)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',      # DB backend
        'NAME': BASE_DIR / 'db.sqlite3',             # File path
    }
}

# Password validation rules (improve security)
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},  # No similarity to user data
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},            # Enforce length
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},           # Block common passwords
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},          # Block all-numeric
]

# Language code (i18n)
LANGUAGE_CODE = 'en-us'


# Time zone
TIME_ZONE = 'UTC'

# Internationalization (enable translations)
USE_I18N = True

# Use timezone-aware datetimes
USE_TZ = True

# URL prefix for static files (CSS/JS/images)
STATIC_URL = 'static/'
STATIC_FILES=[]

# Default primary key field type for models
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'